[
    {
        "id": 1,
        "new": false,
        "title": "Deploy a React App to AWS",
        "tags": [
            "AWS",
            "CI/CD"
        ],
        "slug": "deploy-a-react-app-to-aws",
        "cover": "",
        "date": "2023-12-29",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/aws-deploy-a-react-app.md",
        "tldr": "Host your website on AWS for only a few dollars a month and get hands-on experience across products such as S3, CloudFront, Route53 and Certificate Manager. AWS has been a market leader since its inception. People and businesses of all sizes and orientations, including Fortune 500 companies, are either using or adopting the AWS cloud. But.. its a beast - comprising over 200 products and services, and it's tough to know where to get started. Follow this guide to get your feet wet."
    },
    {
        "id": 2,
        "new": false,
        "title": "Road to Kubernetes - Getting Started",
        "tags": [
            "Kubernetes"
        ],
        "slug": "kubernetes-getting-started",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/k8s-banner.webp",
        "date": "2024-01-15",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-getting-started.md",
        "tldr": "Get started learning Kubernetes by creating a local cluster and investigating how pods get placed on particular nodes."
    },
    {
        "id": 3,
        "new": false,
        "title": "Deploy a Kubernetes cluster to Civo Cloud",
        "tags": [
            "Kubernetes"
        ],
        "slug": "civo-fastapi",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/civo-logo.png",
        "date": "2024-02-13",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-civo-fastapi.md",
        "tldr": "Create a FastAPI application, dockerize it, and deploy it to Civo Cloud. Civo is a kubernetes focused cloud provider that is offering 2 months free credits."
    },
    {
        "id": 4,
        "new": false,
        "title": "Control Scheduling using Taints and Tolerations with Node Affinity",
        "tags": [
            "Kubernetes"
        ],
        "slug": "taints-tolerations-affinity",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/Kubernetes-Scheduling.png",
        "date": "2024-03-07",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-taints-tolerations-affinity.md",
        "tldr": "A combination of Taints and Toleration's, and Node Affinity rules can be used together to completely dedicate nodes for specific pods."
    },
    {
        "id": 5,
        "new": true,
        "title": "Up and Running with Kind",
        "tags": [
            "Kubernetes"
        ],
        "slug": "kind-up-and-running",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/kind-banner.png",
        "date": "2024-12-27",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-kind-setup.md",
        "tldr": "In this guide, we will set up a local Kubernetes cluster using Kind (Kubernetes IN Docker). Kind is a tool for running local Kubernetes clusters using Docker container nodes. This guide walks you through installing the necessary tools (Docker, Kubectl, and kind), creating a 4-node cluster with a simple configuration file, and verifying the cluster can expose services to the host machine."
    },
    {
        "id": 6,
        "new": true,
        "title": "Kubernetes Scheduling: Back to basics",
        "tags": [
            "Kubernetes"
        ],
        "slug": "kubernetes-scheduling-101",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/k8s-banner-2.webp",
        "date": "2024-12-29",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-scheduling-101.md",
        "tldr": "Kubernetes assigns Pods to Nodes in several ways. This article will cover the basics of how Kubernetes assigns Pods to Nodes, including the scheduling process, the role of the kube-scheduler, and the different ways Pods can be assigned to Nodes."
    },
    {
        "id": 7,
        "new": true,
        "title": "Kubernetes Authentication and Authorization: Getting Started",
        "tags": [
            "Kubernetes"
        ],
        "slug": "kubernetes-authentication-authorization-getting-started",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/k8s-security-banner.png",
        "date": "2025-01-02",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-authentication-authorization-01.md",
        "tldr": "Create and manage user access in your KIND cluster. Practice creating a user, assigning roles and role bindings, and testing access."
    },
    {
        "id": 8,
        "new": true,
        "title": "Kubernetes Storage: First Look",
        "tags": [
            "Kubernetes"
        ],
        "slug": "kubernetes-storage-first-look",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/k8s-storage-banner.webp",
        "date": "2025-01-04",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-storage-01.md",
        "tldr": "Continuing my journey into Kubernetes, I'm going to take a look at storage using my local KIND cluster. I'll quickly review how docker deals with storage, then I'll be jumping into Kubernetes by creating a Persistent Volume and Persistent Volume Claim, and then deploying a Pod that uses the Persistent Volume Claim."
    },
    {
        "id": 9,
        "new": true,
        "title": "Kubernetes Networking: Getting Started",
        "tags": [
            "Kubernetes"
        ],
        "slug": "kubernetes-storage-first-look",
        "cover": "https://s3.ap-southeast-2.amazonaws.com/blog.crewsj.net/shared_images/Kubernetes-Scheduling.png",
        "date": "2025-01-05",
        "markdown": "https://jimcrews.github.io/crewsj.github.io/k8s-network-policy-01.md",
        "tldr": "This tutorial walks you through setting up network policies in Kubernetes using a KIND cluster. You'll learn how to disable KIND's default network plugin and install Calico, a third-party networking solution that supports network policies. The guide then demonstrates creating a 3-tier application with front-end, back-end, and database pods and services. You'll test connectivity between these pods and apply a network policy to restrict database access to only the back-end pod on port 3306. This hands-on approach helps you understand how to control traffic between pods using network policies."
    }
]